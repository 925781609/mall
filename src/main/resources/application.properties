# 指定服务的端口号
server.port=8080
# 使用random生成随机数，这些数字暂时没有用到
liuil.secret=${random.value}
liuil.number=${random.int}
liuil.bignumber=${random.long}
liuil.uuid=${random.uuid}
liuil.number.less.than.ten=${random.int(10)}
liuil.number.in.range=${random.int[1024,65536]}
## Thyemleaf 配置
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
#开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache=false
spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
mybatis.mapper-locations=classpath:mapper/*.xml
#mybatis.type-aliases-package: com.liuil.xmall.domain
#mybatis.config-location: classpath:mybatis-config.xml
#spring.profiles.active=sharding-databases
# logging.file=D:\\Ubuntu\\project\\test\\xmall\\logs\\application.log
### sharding jdbc config
#两个数据源
sharding.jdbc.datasource.names=db0,db1
#db0
sharding.jdbc.datasource.db0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.db0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.db0.url=jdbc:mysql://localhost:3306/db0
sharding.jdbc.datasource.db0.username=root
sharding.jdbc.datasource.db0.password=123456
#db1
sharding.jdbc.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.db1.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.db1.url=jdbc:mysql://localhost:3306/db1
sharding.jdbc.datasource.db1.username=root
sharding.jdbc.datasource.db1.password=123456
#使用行表达式，根据分片键user_id进行分库
sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=db$->{user_id%2}
# 配置分表，user不分表，order、orderItem根据分片键order_id进行分片。分片算法自定义
sharding.jdbc.config.sharding.tables.user.logic-table=user
sharding.jdbc.config.sharding.tables.user.actual-data-nodes=db$->{0..1}.user
sharding.jdbc.config.sharding.tables.order.logic-table=order
sharding.jdbc.config.sharding.tables.order.actual-data-nodes=db$->{0..1}.order_${2019}${['05','06']}
sharding.jdbc.config.sharding.tables.order.table-strategy.standard.sharding-column=order_id
sharding.jdbc.config.sharding.tables.order.table-strategy.standard.precise-algorithm-class-name=com.liuil.xmall.configuration.OrderShardingAlgorithm
sharding.jdbc.config.sharding.tables.order.table-strategy.standard.range-algorithm-class-name=com.liuil.xmall.configuration.OrderRangeShardingAlgorithm
sharding.jdbc.config.sharding.tables.order.key-generator-column-name=order_id
sharding.jdbc.config.sharding.tables.order_item.logic-table=order_item
sharding.jdbc.config.sharding.tables.order_item.actual-data-nodes=db$->{0..1}.order_item_${2019}${['05','06']}
sharding.jdbc.config.sharding.tables.order_item.table-strategy.standard.sharding-column=order_id
sharding.jdbc.config.sharding.tables.order_item.table-strategy.standard.precise-algorithm-class-name=com.liuil.xmall.configuration.OrderShardingAlgorithm
sharding.jdbc.config.sharding.tables.order_item.table-strategy.standard.range-algorithm-class-name=com.liuil.xmall.configuration.OrderRangeShardingAlgorithm
sharding.jdbc.config.sharding.tables.order_item.key-generator-column-name=order_id
sharding.jdbc.config.sharding.binding-tables[0]=order, order_item


